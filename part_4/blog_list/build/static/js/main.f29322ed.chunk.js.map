{"version":3,"sources":["components/Togglable.js","components/Blog.js","components/LoginForm.js","components/BlogForm.js","components/Notification.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Togglable","forwardRef","props","refs","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","backgroundColor","width","height","margin","onClick","id","buttonId","buttonLabel","children","displayName","Blog","blog","user","likeButtonHandler","deleteButtonHandler","blog_state","setBlog","gridTemplateColumns","gridTemplateRows","placeItems","borderStyle","borderWidth","padding","className","title","author","likes","type","value","event","preventDefault","updatedBlog","url","username","disabled","LoginForm","handleLogin","setUsername","password","setPassword","loginHandler","a","onSubmit","flexDirection","alignSelf","alignItems","justifyContent","border","fontSize","name","onChange","target","BlogForm","createBlog","setTitle","setAuthor","setUrl","placeholder","Notification","message","includes","color","background","borderRadius","marginBottom","baseUrl","token","create","newBlog","config","headers","Authorization","axios","post","response","data","update","put","deleteBlog","blogToDeleteID","delete","getAll","get","then","setToken","newToken","login","credentials","App","blogs","setBlogs","setUser","notification","setNotification","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","loginService","setItem","stringify","setTimeout","console","log","error","handleLogOut","removeItem","handleCreateBlog","blogObject","blogFormRef","current","concat","useRef","deleteHandler","blogToDelete","confirm","filteredBlogs","filter","fontStyle","ref","sort","blog1","blog2","map","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.f29322ed.chunk.js","sourcesContent":["import { useState, forwardRef, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = forwardRef((props,refs) => {\n    const [visible, setVisible] = useState(false)\n\n    const hideWhenVisible = { display: visible ? 'none' : '' }\n    const showWhenVisible = { display: visible ? '' : 'none' }\n\n    const toggleVisibility = () => {\n        setVisible(!visible)\n    }\n\n    useImperativeHandle(refs, () => {\n        return{\n            toggleVisibility\n        }\n    })\n\n    return(\n        <div>\n            <div style={hideWhenVisible}>\n                <button style={ { backgroundColor:'#EC994B', width:'6rem', height:'2rem', margin:5 } } onClick={toggleVisibility} id={props.buttonId}>{props.buttonLabel}</button>\n            </div>\n            <div style={showWhenVisible} >\n                {props.children}\n                <button onClick={toggleVisibility} id={props.buttonId} style={ { backgroundColor:'#FF0000', width:'6rem', height:'2rem', margin:5 } }>cancel</button>\n            </div>\n        </div>\n    )\n})\n\nTogglable.displayName= 'Togglable'\n\nTogglable.propTypes = {\n    buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import Togglable from './Togglable'\nimport { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Blog = ({ blog, user, likeButtonHandler, deleteButtonHandler }) => {\n    const [blog_state, setBlog] = useState(blog)\n\n    const blogStyle = {\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr',\n        gridTemplateRows: '1fr',\n        placeItems:'center',\n        borderStyle: 'solid',\n        borderWidth: '2px',\n        padding: '10px',\n        margin: '3px',\n    }\n\n    const deleteButtonStyle = {\n        backgroundColor: 'red',\n    }\n\n\n    const likeHandler = (event) => {\n        event.preventDefault()\n        const updatedBlog = {\n            ...blog_state,\n            likes: blog_state.likes + 1\n        }\n        likeButtonHandler(updatedBlog)\n        setBlog(updatedBlog)\n    }\n\n    const deleteHandler = (event) => {\n        event.preventDefault()\n        deleteButtonHandler(blog)\n    }\n\n    return(\n        <div style={blogStyle} className=\"Blog\">\n            <div style={{  }}>\n                {blog.title} by {blog.author}\n            </div>\n            <div style={{ }}>\n                <Togglable buttonLabel = \"info\">\n                    <em><span>Likes {blog_state.likes}</span> <input type=\"button\" value=\"Like\" onClick={likeHandler}></input></em><br/>\n                    <em>{blog.url}</em><br/>\n                    <em>{blog.author}</em><br/>\n                    {user.username === blog.user.username ? <input type=\"button\" value=\"Remove\" onClick={deleteHandler} style={deleteButtonStyle} id=\"deleteButton\"></input> : <input type=\"button\" value=\"Remove\" disabled={true} id=\"deleteButton\"></input>}\n                    <br/>\n                </Togglable>\n            </div>\n        </div>\n    )\n}\n\nBlog.propTypes = {\n    blog: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired,\n    likeButtonHandler: PropTypes.func.isRequired,\n    deleteButtonHandler: PropTypes.func.isRequired\n}\n\nexport default Blog","import { useState } from 'react'\n\n\nconst LoginForm = ({ handleLogin }) => {\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n\n    //Real login happens on App.js loginHandler\n    const loginHandler = async(event) => {\n        event.preventDefault()\n        handleLogin(username,password)\n        setUsername('')\n        setPassword('')\n    }\n\n    return(\n        <form onSubmit={loginHandler} id=\"loginForm\" style={ { display: 'flex', flexDirection: 'column', alignSelf:'center' , alignItems: 'center' , justifyContent: 'center' , height: '90vh', width: '90vw', padding: 10, margin: 20, border: 'black solid 1px' } }>\n            <div style={ { margin: 2 , fontSize:'2rem' } }>\n                username :\n                <input style={ { fontSize:'1.5rem', margin: 1 , height: '2rem', width: '15rem' } } type=\"text\" value={username} name=\"Username\" onChange={({ target }) => setUsername(target.value)} id=\"username\"/>\n            </div>\n            <div style={ { margin: 2 , fontSize:'2rem' } }>\n                password :\n                <input style={ { fontSize:'1.5rem', margin: 1 , height: '2rem', width: '15rem' } } type=\"password\" value={password} name=\"Password\" onChange={({ target }) => setPassword(target.value)} id=\"password\"/>\n            </div>\n            <button type=\"submit\" style={ { margin: 2 , fontSize:'1.5rem' } }>LOGIN</button>\n        </form>\n    )}\n\nexport default LoginForm","import { useState } from 'react'\nconst BlogForm = ({ createBlog }) => {\n\n    const [title, setTitle] = useState('')\n    const [author, setAuthor] = useState('')\n    const [url, setUrl] = useState('')\n\n    const addNewBlog = (event) => {\n        event.preventDefault()\n        createBlog({\n            title: title,\n            author: author,\n            url: url\n        })\n        setTitle('')\n        setAuthor('')\n        setUrl('')\n    }\n    return(\n        <form onSubmit={addNewBlog} style={ { display:'flex', padding:5 } }>\n            <div style = { { alignSelf:'center' ,margin:2 } }>\n                Title:\n                <input type=\"text\" value={title} onChange={({ target }) => {setTitle(target.value)}} placeholder=\"title\" id=\"input-title\"></input>\n            </div>\n            <div style = { { margin:2 } }>\n                Author:\n                <input type=\"text\" value={author} onChange={({ target }) => {setAuthor(target.value)}} placeholder=\"author\" id=\"input-author\"></input>\n            </div>\n            <div style = { { margin:2 } }>\n                Url:\n                <input type=\"text\" value={url} onChange={({ target }) => {setUrl(target.value)}} placeholder=\"url\" id=\"input-url\"></input>\n            </div>\n\n            <input style={ { backgroundColor:'#EEF3D2', width:'6rem' } } type=\"submit\" value=\"create\" id=\"add-blog\"></input>\n        </form>\n    )\n}\n\nexport default BlogForm","const Notification = ({ message }) => {\n    const notificationStyle = {\n        color: 'green',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n    }\n    const errorStyle = {\n        color: 'red',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n    }\n    if(message !== null){\n        if(message.includes('ERROR:'))\n            return(\n                <div className=\"error-not\"style={errorStyle}>\n                    {message}\n                </div>\n            )\n        else{\n            return(\n                <div style={notificationStyle}>\n                    {message}\n                </div>\n            )\n        }\n    }\n    return null\n\n}\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/api/blogs'\nlet token = null\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n}\n\nconst create = async (newBlog) => {\n    const config = {\n        headers : { Authorization: token },\n    }\n\n    const response = await axios.post(baseUrl, newBlog, config)\n    return response.data\n}\n\nconst update = async (updatedBlog) => {\n    const response = await axios.put(baseUrl + `/${updatedBlog.id}`, updatedBlog)\n    return response.data\n}\n\nconst deleteBlog = async (blogToDeleteID) => {\n    const config = {\n        headers : { Authorization: token },\n    }\n    const response = await axios.delete(baseUrl + `/${blogToDeleteID}`, config)\n    return response.data\n}\n\nexport default { getAll, setToken, create , update, deleteBlog }","import axios from 'axios'\nconst baseUrl = 'api/login'\n\nconst login = async credentials => {\n    const response = await axios.post(baseUrl , credentials)\n    return response.data\n}\n\n\nexport default { login }","import { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n    const [blogs, setBlogs] = useState([])\n    const [user, setUser] = useState(null)\n    const [notification, setNotification] = useState(null)\n\n    useEffect(() => {\n        blogService.getAll().then(blogs =>\n            setBlogs( blogs )\n        )\n    }, [])\n\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('LoggedUser')\n        if(loggedUserJSON){\n            const user = JSON.parse(loggedUserJSON)\n            setUser(user)\n            blogService.setToken(user.token)\n        }\n    },[])\n\n    const handleLogin = async(username,password) => {\n        try{\n            const user = await loginService.login({ username, password })\n            window.localStorage.setItem('LoggedUser', JSON.stringify(user))\n            blogService.setToken(user.token)\n            setUser(user)\n            setNotification(`Logged user ${user.name} correctly!`)\n            setTimeout( () => {\n                setNotification(null)\n            }\n            ,5000)\n        }\n        catch(error){\n            console.log(error.response.data)\n            setNotification(`ERROR:  ${error.response.data.error}`)\n            setTimeout( () => {\n                setNotification(null)\n            }\n            ,5000)\n        }\n    }\n\n    const handleLogOut = (event) => {\n        event.preventDefault()\n        window.localStorage.removeItem('LoggedUser')\n        setUser(null)\n        setNotification('Logged out!')\n        setTimeout( () => {\n            setNotification(null)\n        }\n        ,5000)\n    }\n\n    const handleCreateBlog = async (blogObject) => {\n        try{\n            blogFormRef.current.toggleVisibility()\n            const response = await blogService.create(blogObject)\n            console.log(response)\n            setBlogs(blogs.concat(response))\n            setNotification(`New blog ${response.title} by ${response.author} added`)\n            setTimeout( () => {\n                setNotification(null)\n            }\n            ,5000)\n        }\n        catch(error){\n            console.log(error.response.data)\n            setNotification(`ERROR:  ${error.response.data.error}`)\n            setTimeout( () => {\n                setNotification(null)\n            }\n            ,5000)\n        }\n\n    }\n\n    const blogFormRef = useRef()\n\n    const likeButtonHandler = async(blogObject) => {\n        try{\n            await blogService.update(blogObject)\n            setNotification('Liked!')\n            setTimeout( () => {\n                setNotification(null)\n            }\n            ,5000)\n        }\n        catch(error){\n            console.log(error.response.data)\n            setNotification(`ERROR:  ${error.response.data.error}`)\n            setTimeout( () => {\n                setNotification(null)\n            }\n            ,5000)\n        }\n    }\n    const deleteHandler = async(blogToDelete) => {\n        if (window.confirm(`Remove blog ${blogToDelete.title} by ${blogToDelete.author}`)){\n            try{\n                await blogService.deleteBlog(blogToDelete.id)\n                const filteredBlogs = blogs.filter(blog => blog.id !== blogToDelete.id)\n                setBlogs(filteredBlogs)\n                setNotification('Blog deleted')\n                setTimeout( () => {\n                    setNotification(null)\n                }\n                ,5000)\n            }\n            catch(error){\n                console.log(error.response.data)\n                setNotification(`ERROR:  ${error.response.data.error}`)\n                setTimeout( () => {\n                    setNotification(null)\n                }\n                ,5000)\n            }\n        }\n\n    }\n\n    const loggedForm = () => (\n        <div style={ { display: 'flex', flexDirection:'column' } }>\n            <h2 style={ { alignSelf:'center', fontSize:'2rem' } }>blogs</h2>\n            <div style={ { alignSelf:'center', fontStyle:'italic', margin:5 } }>User {user.name} logged in\n                <input style={ { margin: 10 } } type=\"button\" onClick={handleLogOut} value=\"Log Out\" id=\"logout-button\"></input>\n            </div>\n            <Togglable buttonLabel=\"create blog\" ref={blogFormRef} buttonId=\"create-button\">\n                <BlogForm createBlog={handleCreateBlog}/>\n            </Togglable>\n            {blogs.sort((blog1,blog2) => {if(blog1.likes>blog2.likes){return -1}else{return 1}}).map(blog =>\n                <div key={blog.id}>\n                    <Blog blog={blog} likeButtonHandler={likeButtonHandler} deleteButtonHandler={deleteHandler} user={user}/>\n                </div>\n            )}\n        </div>\n    )\n\n    return (\n        <div >\n            <Notification message={notification}></Notification>\n\n            <div>\n                {user === null\n                    ? <LoginForm handleLogin={handleLogin} />\n                    : loggedForm()}\n            </div>\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App'\n\nReactDOM.createRoot(document.getElementById('root')).render(<App />)\n"],"sourceRoot":""}