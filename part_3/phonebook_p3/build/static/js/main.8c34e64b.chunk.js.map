{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","changeHandler","onChange","PersonForm","name","nameHandler","number","numberHandler","submitHandler","value","type","onClick","Persons","persons","clickHandler","map","person","id","url","personsServices","getAll","axios","get","then","response","data","add","post","del","delete","update","console","log","put","Notification","message","includes","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","useEffect","personslist","setPersons","setNewList","useState","newName","setNewName","newNumber","setNewNumber","personsToList","notificationUpdate","setNotUpdate","event","filter","toLowerCase","target","preventDefault","undefined","find","personToUpdate","window","confirm","updatedPerson","setTimeout","catch","error","newPerson","length","addedPerson","concat","updatedList","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.8c34e64b.chunk.js","sourcesContent":["import React from 'react'\r\nconst Filter = ({changeHandler}) =>{\r\n    return(\r\n        <div>Filter shown with <input onChange ={changeHandler}/></div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({name , nameHandler, number, numberHandler, submitHandler}) =>{\r\n    return(\r\n    <form>\r\n        <div>\r\n            <p>Name: <input value={name} onChange = {nameHandler}/></p>\r\n            <p>Number: <input value={number} onChange = {numberHandler}/></p>\r\n        </div>\r\n        <div>\r\n            <button type=\"submit\" onClick ={submitHandler}>ADD</button>\r\n        </div>\r\n    </form>)\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = ({persons, clickHandler}) =>{\r\n    return(persons.map(person =>  <div key = {person.id}>  name = {person.name} number = {person.number} <button value={person.id} onClick={() => clickHandler(person.id)}> delete </button></div>))\r\n}\r\n\r\nexport default Persons","import axios from 'axios'\r\nconst url = '/api/persons'\r\n\r\nconst getAll = () =>{\r\n    const request = axios.get(url)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst add = (person) =>{\r\n    const request = axios.post(url, person)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst del = (id) =>{\r\n    const request = axios.delete(`${url}/${id}`)\r\n    return request.then()\r\n}\r\n\r\nconst update = (person) =>{\r\n    console.log('update');\r\n    const request = axios.put(`${url}/${person.id}`,person)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst personsServices = {getAll,add,del,update,}\r\n\r\nexport default personsServices;","const Notification = ({ message}) => {\r\n\r\n    const notificationStyle = {\r\n        color: 'green',\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10,\r\n    }\r\n    const errorStyle = {\r\n        color: 'red',\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10,\r\n    }\r\n\r\n    if (message === null) {\r\n      return null\r\n    }\r\n    else if(message.includes('ERROR:')){\r\n        return(\r\n            <div style={errorStyle}>\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n      <div style={notificationStyle}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Notification","import { useEffect, useState } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personsServices from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  \n  useEffect(() =>{\n    personsServices\n    .getAll()\n    .then(personslist => {\n      console.log('Got the persons data');\n      setPersons(personslist)\n      setNewList(personslist)\n    })\n  } ,[])\n\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber,setNewNumber] = useState('')\n  const [personsToList,setNewList] = useState([])\n  const [notificationUpdate, setNotUpdate] = useState(null)\n\n  \n  const submitHandler = (event) => {\n\n    event.preventDefault();\n\n    if(persons.find(person => person.name === newName) !== undefined){\n      const personToUpdate = persons.find(person => person.name === newName)\n      personToUpdate.number = newNumber;\n      if(window.confirm(`${personToUpdate.name} is already added on the phonebook, replace the old number with the new one?`)){\n        personsServices\n        .update(personToUpdate)\n        .then( updatedPerson =>{\n          setNotUpdate(\n            `Person ${updatedPerson.name} was correctly updated` \n          )\n          setPersons(persons.map(person => person.id !== updatedPerson.id ? person : updatedPerson))\n          setNewList(persons.map(person => person.id !== updatedPerson.id ? person : updatedPerson))\n          setNewName('')\n          setNewNumber('')\n          setTimeout(()=>{\n            setNotUpdate(null)\n          },5000)\n        })\n        .catch( (error) =>{\n          setNotUpdate(\n            `ERROR: Information of ${personToUpdate.name} has already been removed from server`\n          )\n          setPersons(persons.filter(person => person.id !== personToUpdate.id))\n          setNewList(persons.filter(person => person.id !== personToUpdate.id))\n          setNewName('')\n          setNewNumber('')\n          setTimeout(()=>{\n            setNotUpdate(null)\n          },5000)\n          return\n        })\n      }\n      return\n    }\n\n    let newPerson = {\n      name: newName,\n      number: newNumber,\n      id:persons.length +1 \n    }\n\n    personsServices\n    .add(newPerson)\n    .then(addedPerson =>{\n      setNotUpdate(\n        `Added the person ${addedPerson.name} correctly` \n      )\n      setPersons(persons.concat(addedPerson))\n      setNewList(persons.concat(addedPerson))\n      setNewName('')\n      setNewNumber('')\n      setTimeout(()=>{\n        setNotUpdate(null)\n      },5000)\n    })\n  }\n\n  const changeNameHandler = (event) => setNewName(event.target.value) \n\n  const changeNumberHandler = (event) => setNewNumber(event.target.value)\n  \n  const changeFilterHandler = (event) =>{\n    setNewList(persons.filter(person => person.name.toLowerCase().includes(event.target.value.toLowerCase()) ))\n    if(event.target.value === ''){\n      setNewList(persons)\n    }\n  }\n\n  const deletePerson = (id) =>{\n    if(window.confirm('Are you sure you want to delete this number?')){\n      personsServices\n      .del(id)\n      .then(()=>{\n        let updatedList = persons.filter(person => person.id !== id)\n        setPersons(updatedList)\n        setNewList(updatedList)\n        console.log(`La persona con el id:${id} a sido eliminada de la base de datos`)\n      })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message = {notificationUpdate}/>\n      <Filter changeHandler={changeFilterHandler}/>\n      <PersonForm name={newName} nameHandler={changeNameHandler} number={newNumber} numberHandler={changeNumberHandler} submitHandler={submitHandler}/>\n      <h3>Numbers</h3>\n      <Persons persons = {personsToList} clickHandler={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport App from './App';\n\nReactDOM.createRoot(document.getElementById('root')).render(<App />);\n\n"],"sourceRoot":""}