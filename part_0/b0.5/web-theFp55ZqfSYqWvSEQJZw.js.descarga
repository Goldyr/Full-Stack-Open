(function(){var namespace="StripeCheckout.require".split("."),name=namespace[namespace.length-1],base=this,i;for(i=0;i<namespace.length-1;i++){base=base[namespace[i]]=base[namespace[i]]||{}}if(base[name]===undefined){base[name]=function(){var modules={},cache={};var requireRelative=function(name,root){var path=expand(root,name),indexPath=expand(path,"./index"),module,fn;module=cache[path]||cache[indexPath];if(module){return module}else if(fn=modules[path]||modules[path=indexPath]){module={id:path,exports:{}};cache[path]=module.exports;fn(module.exports,function(name){return require(name,dirname(path))},module);return cache[path]=module.exports}else{throw"module "+name+" not found"}};var expand=function(root,name){var results=[],parts,part;if(/^\.\.?(\/|$)/.test(name)){parts=[root,name].join("/").split("/")}else{parts=name.split("/")}for(var i=0,length=parts.length;i<length;i++){part=parts[i];if(part==".."){results.pop()}else if(part!="."&&part!=""){results.push(part)}}return results.join("/")};var dirname=function(path){return path.split("/").slice(0,-1).join("/")};var require=function(name){return requireRelative(name,"")};require.define=function(bundle){for(var key in bundle){modules[key]=bundle[key]}};require.modules=modules;require.cache=cache;return require}.call()}})();StripeCheckout.require.define({"loader/lib/bootstrap":function(exports,require,module){(function(){var dependencies,reachability,tracker,indexOf=[].indexOf||function(item){for(var i=0,l=this.length;i<l;i++){if(i in this&&this[i]===item)return i}return-1};dependencies=StripeCheckout.require("loader/lib/dependencies");reachability=StripeCheckout.require("loader/lib/reachability");tracker=StripeCheckout.require("loader/lib/tracker");module.exports=function(callbacks){var config,error,missing,pingQ,ref;missing=dependencies();if(missing.length){if(indexOf.call(missing,"StripeCheckoutInner")>=0){reachability.inner()}reachability.superfish();return callbacks.onError("Unable to find JavaScript dependencies: "+missing.join(" "))}try{config=JSON.parse((ref=StripeCheckoutConfig.textContent)!=null?ref:StripeCheckoutConfig.innerHTML)}catch(error){return callbacks.onError("Unable to parse Stripe Checkout configuration.")}pingQ=function(data){try{tracker.track.scriptError()}catch(undefined){}return data};Raven.config(config.sentryURL,{dataCallback:pingQ}).install();if(config.stripeURL){Stripe.endpoint=config.stripeURL}Stripe.trackPerf=true;return Raven.context(function(){var CheckoutApp,CheckoutTracker,checkoutApp;CheckoutTracker=StripeCheckout.require("lib/tracker");CheckoutTracker.setDistinctID(callbacks.distinctID);CheckoutApp=StripeCheckout.require(config.appController);return checkoutApp=new CheckoutApp({el:document.body,onOpen:callbacks.onOpen,onLoad:callbacks.onLoad,onError:function(){return callbacks.onError("Stripe Checkout timed out before rendering.")}})})}}).call(this)}});StripeCheckout.require.define({"loader/lib/dependencies":function(exports,require,module){(function(){var DEPENDENCIES;DEPENDENCIES=["JSON","Stripe","StripeCheckoutInner","StripeCheckoutConfig","Raven"];module.exports=function(){var dependency,i,len,missing;if(window.StripeCheckoutConfig==null){window.StripeCheckoutConfig=document.getElementById("StripeCheckoutConfig")}missing=[];for(i=0,len=DEPENDENCIES.length;i<len;i++){dependency=DEPENDENCIES[i];if(window[dependency]==null){missing.push(dependency)}}return missing}}).call(this)}});StripeCheckout.require.define({"loader/lib/dom":function(exports,require,module){(function(){module.exports={addClass:function(el,name){return el.className+=" "+name},removeClass:function(el,name){return el.className=el.className.replace(/#{name}/g,"")},removeNode:function(el){var ref;return(ref=el.parentNode)!=null?ref.removeChild(el):void 0},addEventListener:function(el,event,fn){if(el.addEventListener!=null){return el.addEventListener(event,fn)}else if(el.attachEvent!=null){return el.attachEvent("on"+event,fn)}else if(event==="load"){return fn()}}}}).call(this)}});StripeCheckout.require.define({"loader/lib/reachability":function(exports,require,module){(function(){var dom,tracker;dom=StripeCheckout.require("loader/lib/dom");tracker=StripeCheckout.require("loader/lib/tracker");module.exports={img:function(resource){var event,i,img,len,ref,track;track=function(event){return dom.addEventListener(img,event,function(e){return tracker.track.reachability(event,resource,e)})};img=new Image;ref=["load","error"];for(i=0,len=ref.length;i<len;i++){event=ref[i];track(event)}tracker.track.reachability("start",resource);return img.src=resource+"?nocache="+this.random()},xhr:function(resource){var event,i,len,ref,track,xhr;track=function(event){return dom.addEventListener(xhr,event,function(e){var ref,text;if(event==="load"&&xhr.status>=400){text=(ref=xhr.responseText)!=null?ref.substr(0,500):void 0}return tracker.track.reachability(event,resource,e,xhr.status,text)})};xhr=new XMLHttpRequest;xhr.open("GET",resource+"?nocache="+this.random(),true);ref=["progress","load","error","abort"];for(i=0,len=ref.length;i<len;i++){event=ref[i];track(event)}tracker.track.reachability("start",resource);return xhr.send()},random:function(){return Math.random()*1e4|0},inner:function(){return this.xhr("https://checkout.stripe.com/v3/checkout/inner.js")},superfish:function(){return this.img("https://superfish.xmarks.com/infected.png")}}}).call(this)}});StripeCheckout.require.define({"loader/lib/tracker":function(exports,require,module){(function(){var state,track,hasProp={}.hasOwnProperty;state={ui_integration:"unknown",loaded:false};track=function(event,payload){var key,url,value;if(!track.enabled){return}url="https://q.stripe.com/?event=checkout."+encodeURIComponent(event);url+="&distinct_id="+track.distinctID;url+="&rf="+encodeURIComponent(window.location.host);for(key in state){value=state[key];url+="&st_"+key+"="+encodeURIComponent(value)}for(key in payload){value=payload[key];url+="&"+key+"="+encodeURIComponent(value)}return(new Image).src=url};track.enabled=true;track.distinctID="unknown";module.exports={setEnabled:function(enabled){return track.enabled=enabled},setDistinctID:function(value){if(value){return track.distinctID=value}},getDistinctID:function(){return track.distinctID},state:{setUIIntegration:function(value){return state["ui_integration"]=value},setLoaded:function(value){return state["loaded"]=value}},track:{error:function(message,options){var data,key,val;data={message:message};if(options){for(key in options){val=options[key];data[key]=val}}return track("error",data)},reachability:function(name,resource,event,status,text){var data,k,v;if(event==null){event={}}if(status==null){status=0}if(text==null){text=""}data={};for(k in event){if(!hasProp.call(event,k))continue;v=event[k];if(typeof v!=="object"){data[k]=v}}data=typeof JSON!=="undefined"&&JSON!==null?typeof JSON.stringify==="function"?JSON.stringify(data):void 0:void 0;return track("reachability",{name:name,resource:resource,data:data,status:status,text:text})},scriptError:function(){return track("scriptError",{time:(new Date).getTime()})}}}}).call(this)}});(function(){var bodyEl,bootstrap,dependencies,distinctID,dom,hideError,hideSpinner,missing,showError,spinnerEl,tracker;dom=StripeCheckout.require("loader/lib/dom");dependencies=StripeCheckout.require("loader/lib/dependencies");bootstrap=StripeCheckout.require("loader/lib/bootstrap");tracker=StripeCheckout.require("loader/lib/tracker");distinctID=window.location.href.match(/distinct_id=([\w-]+)/);if(distinctID){distinctID=distinctID[1]}tracker.setDistinctID(distinctID);bodyEl=document.body;spinnerEl=document.getElementById("stripeSpinner");if(window.top!==window.self){dom.addClass(bodyEl,"stripeInFrame");tracker.state.setUIIntegration("iframe")}else{tracker.state.setUIIntegration("tab")}missing=dependencies();if(missing.length){tracker.track.error("Unable to find JavaScript dependencies: "+missing.join(" "))}showError=function(message){tracker.track.error(message);return dom.addClass(bodyEl,"stripeLoadError")};hideError=function(){return dom.removeClass(bodyEl,"stripeLoadError")};hideSpinner=function(){dom.addClass(spinnerEl,"hidden");return setTimeout(function(){return dom.removeNode(spinnerEl)},300)};dom.addEventListener(window,"load",function(){var ref;window.onerror=(ref=window.onerror)!=null?ref.last:void 0;tracker.state.setLoaded(true);return bootstrap({distinctID:distinctID,onLoad:function(){hideError();return hideSpinner()},onError:function(message){showError(message);return hideSpinner()}})});dom.addEventListener(window,"beforeunload",function(){tracker.setEnabled(false);return void 0})}).call(this);